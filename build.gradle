// We cannot use plugins in subprojects
//plugins {
//    id 'org.jetbrains.kotlin.jvm' version '1.1.51'
//}

buildscript {
    ext.kotlinVersion = '1.1.51'

    repositories {
        // Temporary fix https://issues.sonatype.org/browse/MVNCENTRAL-2870
        // mavenCentral()
        maven { url 'https://repo.maven.apache.org/maven2' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    // Temporary fix https://issues.sonatype.org/browse/MVNCENTRAL-2870
    // mavenCentral()
    maven { url 'https://repo.maven.apache.org/maven2' }
}

ext {
    kafkaVersion = '0.11.0.1'
    jestVersion = '5.3.3'
    protobufVersion = '3.4.0'
    junitJupiterVersion = '5.0.1'
}

mainClassName = 'org.apache.kafka.connect.cli.ConnectStandalone'
applicationDefaultJvmArgs = ['-Dlog4j.configuration=file:config/connect-log4j.properties']

run {
    if(System.getProperty("exec.args") != null) {
        args System.getProperty("exec.args").split()
    }
}

dependencies {
    protobuf "com.google.protobuf:protobuf-java:$protobufVersion"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.apache.kafka:connect-api:$kafkaVersion"
    compile "org.apache.kafka:connect-json:$kafkaVersion"
    compile "org.apache.kafka:connect-runtime:$kafkaVersion"
    compile "io.searchbox:jest:$jestVersion"
    compile "io.searchbox:jest-common:$jestVersion"
    compile "com.google.protobuf:protobuf-java:$protobufVersion"
    compile "com.google.protobuf:protobuf-java-util:$protobufVersion"

    testCompile("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
    testCompile 'org.assertj:assertj-core:3.8.0'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }
}

sourceSets.main.java.srcDirs += 'build/generated/source/proto/main/java'
sourceSets.test.java.srcDirs += 'build/generated/source/proto/test/java'

compileKotlin.dependsOn 'generateProto'
compileTestKotlin.dependsOn 'generateTestProto'
